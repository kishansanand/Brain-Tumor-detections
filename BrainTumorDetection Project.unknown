{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1EAq250KezIvRsJFJz5SzcRDyH-_VWAsq","timestamp":1711442117267}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"6oFzkTqtr42Z","executionInfo":{"status":"ok","timestamp":1717953188406,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"outputs":[],"source":["from google.colab import drive"]},{"cell_type":"markdown","source":[],"metadata":{"id":"S-jRL0hCCHEm"}},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VSFR-TOesO7L","executionInfo":{"status":"ok","timestamp":1717953213529,"user_tz":-330,"elapsed":25129,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"4cf9f3b0-37d3-4f45-b8c9-28e755b16724"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import os\n","import math\n","import shutil\n","import glob\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"id":"b0bcCM8rsZ9-","executionInfo":{"status":"ok","timestamp":1717953213529,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["ROOT_DIR = \"/content/drive/MyDrive/datasets\"\n","number_of_images = {}\n","\n","for dir in os.listdir(ROOT_DIR):\n","  number_of_images[dir] = len(os.listdir(os.path.join(ROOT_DIR, dir)) )\n","\n","number_of_images.items()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R0Tr_vFfse4G","executionInfo":{"status":"ok","timestamp":1717953221852,"user_tz":-330,"elapsed":8328,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"3f3e0e74-48f2-44ed-a31e-d342be5ee4a7"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_items([('no', 1500), ('yes', 1500)])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["def dataFolder(p, split):\n","    if not os.path.exists(\"./\" + p):\n","        os.mkdir(\"./\" + p)\n","\n","        for dir in os.listdir(ROOT_DIR):\n","            os.makedirs(\"./\" + p + \"/\" + dir, exist_ok=True)\n","            images_dir = os.path.join(ROOT_DIR, dir)\n","            images_list = os.listdir(images_dir)\n","            num_images = len(images_list)\n","            num_images_to_copy = math.floor(split * num_images) - 5\n","\n","            selected_images = np.random.choice(images_list, size=num_images_to_copy, replace=False)\n","\n","            for img in selected_images:\n","                src_path = os.path.join(images_dir, img)\n","                dest_path = os.path.join(\"./\" + p, dir)\n","                shutil.copy(src_path, dest_path)\n","                # os.remove(src_path)\n","    else:\n","        print(f\"{p} Folder exists\")"],"metadata":{"id":"0eZN-rvasgtF","executionInfo":{"status":"ok","timestamp":1717953221852,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["dataFolder(\"train\",0.8)"],"metadata":{"id":"Wge_KAeqsnHV","executionInfo":{"status":"ok","timestamp":1717953330705,"user_tz":-330,"elapsed":108856,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# dataFolder(\"val\",0.15)"],"metadata":{"id":"HRNzbYd1uGY4","executionInfo":{"status":"ok","timestamp":1717953330706,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["dataFolder(\"test\",0.2)"],"metadata":{"id":"zgCkws_auWRO","executionInfo":{"status":"ok","timestamp":1717953333601,"user_tz":-330,"elapsed":2900,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["from keras.layers import Conv2D,MaxPool2D,Dropout,Flatten,Dense,BatchNormalization,GlobalAvgPool2D\n","from keras.models import Sequential\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","import keras"],"metadata":{"id":"dD-Mh6EQudA2","executionInfo":{"status":"ok","timestamp":1717953339342,"user_tz":-330,"elapsed":5746,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["#CNN Model\n","model=Sequential()\n","model.add(Conv2D(filters=16,kernel_size=(3,3),activation='relu',input_shape=(224,224,3)))\n","\n","model.add(Conv2D(filters=36,kernel_size=(3,3),activation='relu'))\n","model.add(MaxPool2D(pool_size=(2,2)))\n","\n","model.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))\n","model.add(MaxPool2D(pool_size=(2,2)))\n","\n","model.add(Conv2D(filters=128,kernel_size=(3,3),activation='relu'))\n","model.add(MaxPool2D(pool_size=(2,2)))\n","\n","model.add(Dropout(rate=0.25))\n","\n","\n","model.add(Flatten())\n","model.add(Dense(units=64,activation='relu'))\n","model.add(Dropout(rate=0.25))\n","model.add(Dense(units=1,activation='sigmoid'))\n","\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ba9zX3jZugFz","executionInfo":{"status":"ok","timestamp":1717953340358,"user_tz":-330,"elapsed":1033,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"be405690-7155-4920-9a67-d08bf4c129fe"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 222, 222, 16)      448       \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 220, 220, 36)      5220      \n","                                                                 \n"," max_pooling2d (MaxPooling2  (None, 110, 110, 36)      0         \n"," D)                                                              \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 108, 108, 64)      20800     \n","                                                                 \n"," max_pooling2d_1 (MaxPoolin  (None, 54, 54, 64)        0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 52, 52, 128)       73856     \n","                                                                 \n"," max_pooling2d_2 (MaxPoolin  (None, 26, 26, 128)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout (Dropout)           (None, 26, 26, 128)       0         \n","                                                                 \n"," flatten (Flatten)           (None, 86528)             0         \n","                                                                 \n"," dense (Dense)               (None, 64)                5537856   \n","                                                                 \n"," dropout_1 (Dropout)         (None, 64)                0         \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 65        \n","                                                                 \n","=================================================================\n","Total params: 5638245 (21.51 MB)\n","Trainable params: 5638245 (21.51 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(optimizer='adam',loss=keras.losses.binary_crossentropy,metrics=['accuracy'])\n","#Preparing our data using data generator\n","def preprocessingImages1(path):\n","  \"\"\"\n","  input:Path\n","  output:Pre processed images\n","  \"\"\"\n","  image_data=ImageDataGenerator(zoom_range=0.2,shear_range=0.2,rescale=1/255,horizontal_flip=True)\n","  image = image_data.flow_from_directory(directory=path,target_size=(224,224),batch_size=32,class_mode='binary')\n","\n","  return image"],"metadata":{"id":"H335EAbUul4D","executionInfo":{"status":"ok","timestamp":1717953340358,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["path = \"/content/train\"\n","train_data = preprocessingImages1(path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y7D3NXeCuq-U","executionInfo":{"status":"ok","timestamp":1717953340358,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"c84e8e19-f217-4181-a5ae-1adef6b6358f"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 2390 images belonging to 2 classes.\n"]}]},{"cell_type":"code","source":["# model.compile(optimizer='adam',loss=keras.losses.binary_crossentropy,metrics=['accuracy'])\n","#Preparing our data using data generator\n","def preprocessingImages2(path):\n","  \"\"\"\n","  input:Path\n","  output:Pre processed images\n","  \"\"\"\n","  image_data=ImageDataGenerator(rescale=1/255)\n","  image = image_data.flow_from_directory(directory=path,target_size=(224,224),batch_size=32,class_mode='binary')\n","\n","  return image"],"metadata":{"id":"-2wZNgrauzha","executionInfo":{"status":"ok","timestamp":1717953340358,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["path = \"/content/test\"\n","test_data = preprocessingImages2(path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bMpoPe9Ru6lc","executionInfo":{"status":"ok","timestamp":1717953340358,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"4dc4bb73-a25d-4b85-ea3b-32b5db0e43ac"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 590 images belonging to 2 classes.\n"]}]},{"cell_type":"code","source":["# path = \"/content/val\"\n","# val_data = preprocessingImages2(path)"],"metadata":{"id":"CoWb3FecvBcF","executionInfo":{"status":"ok","timestamp":1717953340359,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["#early stopping and model checkpoints\n","from keras.callbacks import ModelCheckpoint,EarlyStopping\n","#early stoppings\n","es = EarlyStopping(monitor=\"loss\",min_delta=0.01,patience=5,verbose=1,mode='auto')\n","\n","#model checkpoint\n","mc = ModelCheckpoint(monitor=\"loss\",filepath=\"./bestmodel.h5\",verbose=1,save_best_only=True,mode='auto')\n","\n","cd=[es,mc]"],"metadata":{"id":"BAOI6if9vI7s","executionInfo":{"status":"ok","timestamp":1717953340359,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["Model Training"],"metadata":{"id":"Ik3tfjaUwoB2"}},{"cell_type":"code","source":["history = model.fit(\n","    train_data,\n","    steps_per_epoch=24,\n","    epochs=30,\n","    verbose=1,\n","    validation_data=test_data ,\n","    validation_steps=16,\n","    callbacks=cd\n",")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wxR1X459wl4R","executionInfo":{"status":"ok","timestamp":1717959170611,"user_tz":-330,"elapsed":5830257,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"295e54fb-b1ab-4034-a3ca-2438194a26b7"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","24/24 [==============================] - ETA: 0s - loss: 0.7096 - accuracy: 0.6055\n","Epoch 1: loss improved from inf to 0.70961, saving model to ./bestmodel.h5\n","24/24 [==============================] - 178s 7s/step - loss: 0.7096 - accuracy: 0.6055 - val_loss: 0.5388 - val_accuracy: 0.7715\n","Epoch 2/30\n","24/24 [==============================] - ETA: 0s - loss: 0.5915 - accuracy: 0.6781\n","Epoch 2: loss improved from 0.70961 to 0.59148, saving model to ./bestmodel.h5\n","24/24 [==============================] - 191s 8s/step - loss: 0.5915 - accuracy: 0.6781 - val_loss: 0.4681 - val_accuracy: 0.7949\n","Epoch 3/30\n","24/24 [==============================] - ETA: 0s - loss: 0.5658 - accuracy: 0.7096\n","Epoch 3: loss improved from 0.59148 to 0.56581, saving model to ./bestmodel.h5\n","24/24 [==============================] - 176s 7s/step - loss: 0.5658 - accuracy: 0.7096 - val_loss: 0.4129 - val_accuracy: 0.8301\n","Epoch 4/30\n","24/24 [==============================] - ETA: 0s - loss: 0.4596 - accuracy: 0.7889\n","Epoch 4: loss improved from 0.56581 to 0.45960, saving model to ./bestmodel.h5\n","24/24 [==============================] - 188s 8s/step - loss: 0.4596 - accuracy: 0.7889 - val_loss: 0.3672 - val_accuracy: 0.8457\n","Epoch 5/30\n","24/24 [==============================] - ETA: 0s - loss: 0.4450 - accuracy: 0.8073\n","Epoch 5: loss improved from 0.45960 to 0.44504, saving model to ./bestmodel.h5\n","24/24 [==============================] - 173s 7s/step - loss: 0.4450 - accuracy: 0.8073 - val_loss: 0.3828 - val_accuracy: 0.8516\n","Epoch 6/30\n","24/24 [==============================] - ETA: 0s - loss: 0.4186 - accuracy: 0.8127\n","Epoch 6: loss improved from 0.44504 to 0.41865, saving model to ./bestmodel.h5\n","24/24 [==============================] - 183s 7s/step - loss: 0.4186 - accuracy: 0.8127 - val_loss: 0.3285 - val_accuracy: 0.8730\n","Epoch 7/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3867 - accuracy: 0.8351\n","Epoch 7: loss improved from 0.41865 to 0.38670, saving model to ./bestmodel.h5\n","24/24 [==============================] - 185s 8s/step - loss: 0.3867 - accuracy: 0.8351 - val_loss: 0.3418 - val_accuracy: 0.8633\n","Epoch 8/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3885 - accuracy: 0.8307\n","Epoch 8: loss did not improve from 0.38670\n","24/24 [==============================] - 188s 8s/step - loss: 0.3885 - accuracy: 0.8307 - val_loss: 0.2821 - val_accuracy: 0.8926\n","Epoch 9/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3719 - accuracy: 0.8562\n","Epoch 9: loss improved from 0.38670 to 0.37185, saving model to ./bestmodel.h5\n","24/24 [==============================] - 195s 8s/step - loss: 0.3719 - accuracy: 0.8562 - val_loss: 0.3382 - val_accuracy: 0.8730\n","Epoch 10/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3577 - accuracy: 0.8575\n","Epoch 10: loss improved from 0.37185 to 0.35772, saving model to ./bestmodel.h5\n","24/24 [==============================] - 188s 8s/step - loss: 0.3577 - accuracy: 0.8575 - val_loss: 0.2540 - val_accuracy: 0.9043\n","Epoch 11/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3377 - accuracy: 0.8760\n","Epoch 11: loss improved from 0.35772 to 0.33766, saving model to ./bestmodel.h5\n","24/24 [==============================] - 188s 8s/step - loss: 0.3377 - accuracy: 0.8760 - val_loss: 0.2849 - val_accuracy: 0.8945\n","Epoch 12/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3420 - accuracy: 0.8698\n","Epoch 12: loss did not improve from 0.33766\n","24/24 [==============================] - 196s 8s/step - loss: 0.3420 - accuracy: 0.8698 - val_loss: 0.3168 - val_accuracy: 0.8867\n","Epoch 13/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3158 - accuracy: 0.8724\n","Epoch 13: loss improved from 0.33766 to 0.31579, saving model to ./bestmodel.h5\n","24/24 [==============================] - 176s 7s/step - loss: 0.3158 - accuracy: 0.8724 - val_loss: 0.2368 - val_accuracy: 0.9004\n","Epoch 14/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3048 - accuracy: 0.8854\n","Epoch 14: loss improved from 0.31579 to 0.30484, saving model to ./bestmodel.h5\n","24/24 [==============================] - 189s 8s/step - loss: 0.3048 - accuracy: 0.8854 - val_loss: 0.2284 - val_accuracy: 0.9219\n","Epoch 15/30\n","24/24 [==============================] - ETA: 0s - loss: 0.3017 - accuracy: 0.8880\n","Epoch 15: loss improved from 0.30484 to 0.30170, saving model to ./bestmodel.h5\n","24/24 [==============================] - 197s 8s/step - loss: 0.3017 - accuracy: 0.8880 - val_loss: 0.2412 - val_accuracy: 0.9004\n","Epoch 16/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2934 - accuracy: 0.8815\n","Epoch 16: loss improved from 0.30170 to 0.29340, saving model to ./bestmodel.h5\n","24/24 [==============================] - 189s 8s/step - loss: 0.2934 - accuracy: 0.8815 - val_loss: 0.3222 - val_accuracy: 0.8555\n","Epoch 17/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2599 - accuracy: 0.9089\n","Epoch 17: loss improved from 0.29340 to 0.25992, saving model to ./bestmodel.h5\n","24/24 [==============================] - 189s 8s/step - loss: 0.2599 - accuracy: 0.9089 - val_loss: 0.2243 - val_accuracy: 0.9121\n","Epoch 18/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2710 - accuracy: 0.8892\n","Epoch 18: loss did not improve from 0.25992\n","24/24 [==============================] - 187s 8s/step - loss: 0.2710 - accuracy: 0.8892 - val_loss: 0.1833 - val_accuracy: 0.9316\n","Epoch 19/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2023 - accuracy: 0.9245\n","Epoch 19: loss improved from 0.25992 to 0.20227, saving model to ./bestmodel.h5\n","24/24 [==============================] - 175s 7s/step - loss: 0.2023 - accuracy: 0.9245 - val_loss: 0.1384 - val_accuracy: 0.9434\n","Epoch 20/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2214 - accuracy: 0.9156\n","Epoch 20: loss did not improve from 0.20227\n","24/24 [==============================] - 185s 8s/step - loss: 0.2214 - accuracy: 0.9156 - val_loss: 0.1462 - val_accuracy: 0.9492\n","Epoch 21/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2115 - accuracy: 0.9271\n","Epoch 21: loss did not improve from 0.20227\n","24/24 [==============================] - 188s 8s/step - loss: 0.2115 - accuracy: 0.9271 - val_loss: 0.1224 - val_accuracy: 0.9512\n","Epoch 22/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2326 - accuracy: 0.9023\n","Epoch 22: loss did not improve from 0.20227\n","24/24 [==============================] - 189s 8s/step - loss: 0.2326 - accuracy: 0.9023 - val_loss: 0.2030 - val_accuracy: 0.9160\n","Epoch 23/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2350 - accuracy: 0.9076\n","Epoch 23: loss did not improve from 0.20227\n","24/24 [==============================] - 187s 8s/step - loss: 0.2350 - accuracy: 0.9076 - val_loss: 0.1211 - val_accuracy: 0.9512\n","Epoch 24/30\n","24/24 [==============================] - ETA: 0s - loss: 0.1892 - accuracy: 0.9323\n","Epoch 24: loss improved from 0.20227 to 0.18916, saving model to ./bestmodel.h5\n","24/24 [==============================] - 193s 8s/step - loss: 0.1892 - accuracy: 0.9323 - val_loss: 0.1196 - val_accuracy: 0.9473\n","Epoch 25/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2279 - accuracy: 0.9156\n","Epoch 25: loss did not improve from 0.18916\n","24/24 [==============================] - 188s 8s/step - loss: 0.2279 - accuracy: 0.9156 - val_loss: 0.1761 - val_accuracy: 0.9473\n","Epoch 26/30\n","24/24 [==============================] - ETA: 0s - loss: 0.2134 - accuracy: 0.9154\n","Epoch 26: loss did not improve from 0.18916\n","24/24 [==============================] - 186s 8s/step - loss: 0.2134 - accuracy: 0.9154 - val_loss: 0.1619 - val_accuracy: 0.9453\n","Epoch 27/30\n","24/24 [==============================] - ETA: 0s - loss: 0.1937 - accuracy: 0.9284\n","Epoch 27: loss did not improve from 0.18916\n","24/24 [==============================] - 175s 7s/step - loss: 0.1937 - accuracy: 0.9284 - val_loss: 0.0940 - val_accuracy: 0.9707\n","Epoch 28/30\n","24/24 [==============================] - ETA: 0s - loss: 0.1697 - accuracy: 0.9414\n","Epoch 28: loss improved from 0.18916 to 0.16972, saving model to ./bestmodel.h5\n","24/24 [==============================] - 189s 8s/step - loss: 0.1697 - accuracy: 0.9414 - val_loss: 0.0820 - val_accuracy: 0.9746\n","Epoch 29/30\n","24/24 [==============================] - ETA: 0s - loss: 0.1757 - accuracy: 0.9340\n","Epoch 29: loss did not improve from 0.16972\n","24/24 [==============================] - 185s 8s/step - loss: 0.1757 - accuracy: 0.9340 - val_loss: 0.1771 - val_accuracy: 0.9336\n","Epoch 30/30\n","24/24 [==============================] - ETA: 0s - loss: 0.1860 - accuracy: 0.9284\n","Epoch 30: loss did not improve from 0.16972\n","24/24 [==============================] - 174s 7s/step - loss: 0.1860 - accuracy: 0.9284 - val_loss: 0.1123 - val_accuracy: 0.9609\n"]}]},{"cell_type":"code","source":["model.evaluate(test_data)"],"metadata":{"id":"EmX4zuPs5WR1","executionInfo":{"status":"ok","timestamp":1717959202376,"user_tz":-330,"elapsed":31768,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"c9946873-61f4-4dcf-f51e-16db4532bec5","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["19/19 [==============================] - 32s 2s/step - loss: 0.1177 - accuracy: 0.9593\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.11770610511302948, 0.9593220353126526]"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(history['loss'])\n","plt.plot(history['val_loss'])\n","plt.xlabel('epochs')\n","plt.ylabel('accuracy')\n","\n","plt.title(\"loss vs val-loss\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"ivYHUy34MQE8","executionInfo":{"status":"error","timestamp":1717959333369,"user_tz":-330,"elapsed":666,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"f8a07cb3-5d3c-4ba0-c798-997ca1244217"},"execution_count":21,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'History' object is not subscriptable","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-705352c974c5>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'epochs'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'History' object is not subscriptable"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(history['accuracy'])\n","plt.plot(history['val_accuracy'])\n","plt.xlabel('epochs')\n","plt.ylabel('accuracy')\n","\n","plt.title(\"acc vs val-acc\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"eSatQzHuMwP5","executionInfo":{"status":"error","timestamp":1717959316520,"user_tz":-330,"elapsed":476,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}},"outputId":"564eea47-9784-4bc4-c922-d8f35043d6ef"},"execution_count":20,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'History' object is not subscriptable","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-c9b192564765>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'epochs'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'History' object is not subscriptable"]}]},{"cell_type":"code","source":["import tensorflow as tf\n","test_image = tf.keras.utils.load_img('mri-brain_web.jpg', target_size=(224,224))\n","test_img = np.array(test_image)\n","\n","result = model.predict(test_img[np.newaxis, ...])\n","\n","if result == 0:\n","  print('There is no tumor detected')\n","else:\n","  print('There is a tumor detected')"],"metadata":{"id":"VxOThPol2PJD","executionInfo":{"status":"aborted","timestamp":1717959203224,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1ajC0JH74Vg4","executionInfo":{"status":"aborted","timestamp":1717959203224,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sahil Ranjan","userId":"16062782326901064762"}}},"execution_count":null,"outputs":[]}]}